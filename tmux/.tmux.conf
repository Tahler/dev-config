################################################################################
#   _                                          __
#  | |                                        / _|
#  | |_ _ __ ___  _   ___  __  ___ ___  _ __ | |_
#  | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \|  _|
#  | |_| | | | | | |_| |>  < | (_| (_) | | | | |
# (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#
################################################################################

#############
# Behaviors #
#############

# Create default session on server start
# (i.e. "tmux attach" creates a session if one does not exist)
new-session

# Auto window rename
set-window-option -g automatic-rename

# Allows for faster key repetition
set -s escape-time 0

# Color options
set -g default-terminal "screen-256color"

# Start numbering at 1
set -g base-index 1

# Enable mouse for different versions of tmux
# (If 'awk' exits with status 0, 'if-shell' evaluates to true)
# tmux < v2.1:
if-shell "tmux -V | awk '{exit !($2 < \"2.1\")}'" \
    "setw -g mode-mouse on ; set -g mouse-select-pane on ; set -g mouse-resize-pane on ; set -g mouse-select-window on ;"
# tmux >= v2.1:
if-shell "tmux -V | awk '{exit !($2 >= \"2.1\")}'" \
    "set -g mouse on ;"

###############
# Keymappings #
###############

# Reload config
bind r source-file ~/.tmux.conf \

# Prefix set to c-b
set-option -g prefix c-a
unbind-key c-b
bind-key a send-prefix

# Create window with prompt for name
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Arrow to switch windows
unbind left
unbind right
bind left previous-window
bind right next-window

# Vi-like pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quicker Vi-like switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)(g?(view|n?vim?)(diff)?|git)$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Mnemonic pane splitting
bind \ split-window -h
bind - split-window -v

##############
# Status bar #
##############

# Prevent cutoffs
set -g status-left-length 255
set -g status-right-length 255

# Session name on left
set -g status-left ' #S'

# Window list in middle
set -g status-justify centre

# 24 hour clock on right
set -g status-right '#[fg=white,bg=default]%d/%m/%y %R#[default] '

##########
# Colors #
##########

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# Default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# Active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# Pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# Message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# Pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

########
# Misc #
########

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

# # fix pane_current_path on new window and splits
# if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
# if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
# if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
# if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
